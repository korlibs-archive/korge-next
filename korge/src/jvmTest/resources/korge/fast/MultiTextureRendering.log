createBuffer():0
bufferCreate: 1
createBuffer():1
bufferCreate: 2
createBuffer():2
bufferCreate: 3
createBuffer():3
bufferCreate: 4
RenderBuffer[0].setSize(1280, 720)
createMainRenderBuffer():0
RenderBuffer[0].set()
clear(#00000000, 1.0, 0, true, true, true)
disposeTemporalPerFrameStuff()
flipInternal()
finish
RenderBuffer[0].set()
clear(#00000000, 1.0, 0, true, true, true)
textureCreate: 1
createTexture():0
Texture[0].uploadedBitmap(SyncBitmapSource(rgba=true, width=16, height=16), 16, 16)
textureCreate: 2
createTexture():1
Texture[1].uploadedBitmap(SyncBitmapSource(rgba=true, width=16, height=16), 16, 16)
textureCreate: 3
createTexture():2
Texture[2].uploadedBitmap(SyncBitmapSource(rgba=true, width=16, height=16), 16, 16)
textureCreate: 4
createTexture():3
Texture[3].uploadedBitmap(SyncBitmapSource(rgba=true, width=16, height=16), 16, 16)
textureCreate: 5
createTexture():4
Texture[4].uploadedBitmap(SyncBitmapSource(rgba=true, width=16, height=16), 16, 16)
Buffer[0].afterSetMem(mem[393216])
Buffer[1].afterSetMem(mem[32])
Buffer[2].afterSetMem(mem[49152])
enable: SCISSOR
scissor: 0, 0, 1280, 720
vaoCreate: 1
vaoSet: 1, VertexArrayObject(list=[VertexData(_buffer=Buffer[0], layout=VertexLayout[a_Pos, a_Tex, a_Col, a_Col2]), VertexData(_buffer=Buffer[1], layout=VertexLayout[a_TexIndex])])
vaoUse: 1
uboCreate: 1
uboSet: 1
uboSet.uniform: Uniform(u_ProjMat) = Matrix3D(
  [ 0.0015625, 0, 0, -1 ],
  [ 0, -0.0027777778, 0, 1 ],
  [ 0, 0, -1, 0 ],
  [ 0, 0, 0, 1 ],
)
uboSet.uniform: Uniform(u_ViewMat) = Matrix3D(
  [ 1, 0, 0, 0 ],
  [ 0, 1, 0, 0 ],
  [ 0, 0, 1, 0 ],
  [ 0, 0, 0, 1 ],
)
uboSet.uniform: Uniform(u_Tex0) = TextureUnit(texture=Texture[0], linear=true, trilinear=null)
uboSet.uniform: Uniform(u_Tex1) = TextureUnit(texture=Texture[1], linear=true, trilinear=null)
uboSet.uniform: Uniform(u_Tex2) = TextureUnit(texture=Texture[2], linear=true, trilinear=null)
uboSet.uniform: Uniform(u_Tex3) = TextureUnit(texture=Texture[3], linear=true, trilinear=null)
uboUse: 1
enable: BLEND
blendEquation: ADD, ADD
blendFunction: SOURCE_ALPHA, ONE_MINUS_SOURCE_ALPHA, ONE, ONE_MINUS_SOURCE_ALPHA
disable: CULL_FACE
depthMask: true
depthRange: 0.0, 1.0
disable: DEPTH
colorMask: true, true, true, true
disable: STENCIL
stencilMask: 0
draw: TRIANGLES, offset=0, count=48, instances=1, indexType=USHORT
::draw.indices: [0, 1, 2, 3, 0, 2, 4, 5, 6, 7, 4, 6, 8, 9, 10, 11, 8, 10, 12, 13, 14, 15, 12, 14, 16, 17, 18, 19, 16, 18, 20, 21, 22, 23, 20, 22, 24, 25, 26, 27, 24, 26, 28, 29, 30, 31, 28, 30]
::draw.attributes[2]: [Attribute(a_Pos), Attribute(a_Tex), Attribute(a_Col), Attribute(a_Col2), Attribute(a_TexIndex)]
::draw.vertex[0]: a_Pos[0,0], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[1]: a_Pos[16,0], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[2]: a_Pos[16,16], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[3]: a_Pos[0,16], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[4]: a_Pos[16,16], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[1]
::draw.vertex[5]: a_Pos[32,16], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[1]
::draw.vertex[6]: a_Pos[32,32], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[1]
::draw.vertex[7]: a_Pos[16,32], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[1]
::draw.vertex[8]: a_Pos[32,32], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[2]
::draw.vertex[9]: a_Pos[48,32], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[2]
::draw.vertex[10]: a_Pos[48,48], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[2]
::draw.vertex[11]: a_Pos[32,48], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[2]
::draw.vertex[12]: a_Pos[48,48], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[3]
::draw.vertex[13]: a_Pos[64,48], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[3]
::draw.vertex[14]: a_Pos[64,64], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[3]
::draw.vertex[15]: a_Pos[48,64], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[3]
::draw.vertex[16]: a_Pos[64,64], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[17]: a_Pos[80,64], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[18]: a_Pos[80,80], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[19]: a_Pos[64,80], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[20]: a_Pos[80,80], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[2]
::draw.vertex[21]: a_Pos[96,80], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[2]
::draw.vertex[22]: a_Pos[96,96], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[2]
::draw.vertex[23]: a_Pos[80,96], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[2]
::draw.vertex[24]: a_Pos[96,96], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[1]
::draw.vertex[25]: a_Pos[112,96], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[1]
::draw.vertex[26]: a_Pos[112,112], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[1]
::draw.vertex[27]: a_Pos[96,112], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[1]
::draw.vertex[28]: a_Pos[112,112], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[3]
::draw.vertex[29]: a_Pos[128,112], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[3]
::draw.vertex[30]: a_Pos[128,128], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[3]
::draw.vertex[31]: a_Pos[112,128], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[3]
vaoUse: 0
vaoDelete: 1
Buffer[0].afterSetMem(mem[393216])
Buffer[1].afterSetMem(mem[32])
Buffer[2].afterSetMem(mem[49152])
enable: SCISSOR
scissor: 0, 0, 1280, 720
vaoCreate: 1
vaoSet: 1, VertexArrayObject(list=[VertexData(_buffer=Buffer[0], layout=VertexLayout[a_Pos, a_Tex, a_Col, a_Col2]), VertexData(_buffer=Buffer[1], layout=VertexLayout[a_TexIndex])])
vaoUse: 1
uboSet: 1
uboSet.uniform: Uniform(u_ProjMat) = Matrix3D(
  [ 0.0015625, 0, 0, -1 ],
  [ 0, -0.0027777778, 0, 1 ],
  [ 0, 0, -1, 0 ],
  [ 0, 0, 0, 1 ],
)
uboSet.uniform: Uniform(u_ViewMat) = Matrix3D(
  [ 1, 0, 0, 0 ],
  [ 0, 1, 0, 0 ],
  [ 0, 0, 1, 0 ],
  [ 0, 0, 0, 1 ],
)
uboSet.uniform: Uniform(u_Tex0) = TextureUnit(texture=Texture[4], linear=true, trilinear=null)
uboSet.uniform: Uniform(u_Tex1) = TextureUnit(texture=null, linear=true, trilinear=null)
uboSet.uniform: Uniform(u_Tex2) = TextureUnit(texture=null, linear=true, trilinear=null)
uboSet.uniform: Uniform(u_Tex3) = TextureUnit(texture=null, linear=true, trilinear=null)
uboUse: 1
enable: BLEND
blendEquation: ADD, ADD
blendFunction: SOURCE_ALPHA, ONE_MINUS_SOURCE_ALPHA, ONE, ONE_MINUS_SOURCE_ALPHA
disable: CULL_FACE
depthMask: true
depthRange: 0.0, 1.0
disable: DEPTH
colorMask: true, true, true, true
disable: STENCIL
stencilMask: 0
draw: TRIANGLES, offset=0, count=12, instances=1, indexType=USHORT
::draw.indices: [0, 1, 2, 3, 0, 2, 4, 5, 6, 7, 4, 6]
::draw.attributes[2]: [Attribute(a_Pos), Attribute(a_Tex), Attribute(a_Col), Attribute(a_Col2), Attribute(a_TexIndex)]
::draw.vertex[0]: a_Pos[128,128], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[1]: a_Pos[144,128], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[2]: a_Pos[144,144], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[3]: a_Pos[128,144], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[4]: a_Pos[144,144], a_Tex[0,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[5]: a_Pos[160,144], a_Tex[1,0], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[6]: a_Pos[160,160], a_Tex[1,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
::draw.vertex[7]: a_Pos[144,160], a_Tex[0,1], a_Col[1,1,1,1], a_Col2[0.49803922,0.49803922,0.49803922,0.49803922], a_TexIndex[0]
vaoUse: 0
vaoDelete: 1
disposeTemporalPerFrameStuff()
flipInternal()
finish