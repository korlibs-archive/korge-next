genTextures([1, [1]])
createProgram([]) = 1
getString([35724]) = 
createShader([35632]) = 1
shaderSource([1, uniform sampler2D u_Tex0;
uniform sampler2D u_Tex1;
uniform sampler2D u_Tex2;
uniform sampler2D u_Tex3;
varying float v_TexIndex;
varying vec2 v_Tex;
varying vec4 v_Col;
void main() {
	if ((v_TexIndex <= 1.0)) {
		if ((v_TexIndex == 0.0)) {
			gl_FragColor = texture2D(u_Tex0, fract(v_Tex.xy));
		}
		else {
			gl_FragColor = texture2D(u_Tex1, fract(v_Tex.xy));
		}
	}
	else {
		if ((v_TexIndex == 2.0)) {
			gl_FragColor = texture2D(u_Tex2, fract(v_Tex.xy));
		}
		else {
			gl_FragColor = texture2D(u_Tex3, fract(v_Tex.xy));
		}
	}
	gl_FragColor.rgb = (gl_FragColor.rgb / gl_FragColor.a);
	gl_FragColor = (gl_FragColor.rgba * v_Col.rgba);
	if ((gl_FragColor.a <= 0.0)) {
		discard;
	}
}
])
compileShader([1])
getShaderiv([1, 35713, [1]])
getError([]) = 0
createShader([35633]) = 2
shaderSource([2, attribute vec2 a_Tex;
attribute float a_TexIndex;
attribute vec4 a_Col;
attribute vec4 a_Col2;
attribute vec2 a_Pos;
uniform mat4 u_ProjMat;
uniform mat4 u_ViewMat;
varying vec2 v_Tex;
varying float v_TexIndex;
varying vec4 v_Col;
varying vec4 v_Col2;
void main() {
	v_Tex = a_Tex;
	v_TexIndex = a_TexIndex;
	v_Col = a_Col;
	v_Col2 = a_Col2;
	gl_Position = ((u_ProjMat * u_ViewMat) * vec4(a_Pos, 0.0, 1.0));
}
])
compileShader([2])
getShaderiv([2, 35713, [1]])
getError([]) = 0
attachShader([1, 1])
attachShader([1, 2])
linkProgram([1])
getProgramiv([1, 35714, [0]])
useProgram([1])
genBuffers([1, [1]])
bindBuffer([34962, 1])
bufferData([34962, 96, FBuffer(size=393216), 35044])
getAttribLocation([1, a_Pos]) = 0
enableVertexAttribArray([0])
vertexAttribPointer([0, 2, 5126, false, 24, 0])
getAttribLocation([1, a_Tex]) = 0
enableVertexAttribArray([0])
vertexAttribPointer([0, 2, 5126, false, 24, 8])
getAttribLocation([1, a_Col]) = 0
enableVertexAttribArray([0])
vertexAttribPointer([0, 4, 5121, true, 24, 16])
getAttribLocation([1, a_Col2]) = 0
enableVertexAttribArray([0])
vertexAttribPointer([0, 4, 5121, true, 24, 20])
genBuffers([1, [2]])
bindBuffer([34962, 2])
bufferData([34962, 4, FBuffer(size=4), 35044])
getAttribLocation([1, a_TexIndex]) = 0
enableVertexAttribArray([0])
vertexAttribPointer([0, 1, 5121, false, 1, 0])
getUniformLocation([1, u_ProjMat]) = 0
uniformMatrix4fv([0, 1, false, FBuffer(size=65536)])
getUniformLocation([1, u_ViewMat]) = 0
uniformMatrix4fv([0, 1, false, FBuffer(size=65536)])
getUniformLocation([1, u_Tex0]) = 0
activeTexture([33984])
bindTexture([3553, 1])
texImage2D([3553, 0, 6408, 6408, 5121, AwtNativeImage(64, 64)])
generateMipmap([3553])
texParameteri([3553, 10242, 33071])
texParameteri([3553, 10243, 33071])
texParameteri([3553, 10241, 9987])
texParameteri([3553, 10240, 9729])
uniform1i([0, 0])
getUniformLocation([1, u_Tex1]) = 0
activeTexture([33985])
uniform1i([0, 1])
getUniformLocation([1, u_Tex2]) = 0
activeTexture([33986])
uniform1i([0, 2])
getUniformLocation([1, u_Tex3]) = 0
activeTexture([33987])
uniform1i([0, 3])
enable([3042])
blendEquationSeparate([32774, 32774])
blendFuncSeparate([770, 771, 1, 771])
disable([2884])
depthMask([true])
depthRangef([0.0, 1.0])
disable([2929])
colorMask([true, true, true, true])
disable([2960])
stencilMask([0])
genBuffers([1, [3]])
bindBuffer([34963, 3])
bufferData([34963, 12, FBuffer(size=49152), 35044])
drawElements([4, 6, 5123, 0])
disableVertexAttribArray([0])
disableVertexAttribArray([0])
disableVertexAttribArray([0])
disableVertexAttribArray([0])
disableVertexAttribArray([0])